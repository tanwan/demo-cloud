server:
  port: 28888
spring:
  application:
    name: demo-config-server

eureka:
  client:
    enabled: false

---
# 使用本地git目录,该目录必须有.git文件夹,并且使用的分支需要提交过
spring:
  profiles: local-git
  cloud:
    config:
      server:
        git:
          # See MultipleJGitEnvironmentRepository
          uri: file://Users/lzy/SourceCode/me/demo-cloud-config-repo
          search-paths: business,./**

---
# 如果使用ssh连接的话,可以把known_hosts和密钥文件放在~/.ssh目录下,也可以继承JschConfigSessionFactory去重写getJSch方法
spring:
  profiles: remote-git
  cloud:
    config:
      server:
        git:
          # See MultipleJGitEnvironmentRepository
          uri: git@github.com:tanwan/demo-cloud-config-repo.git
          search-paths: ./**

---
# 使用注册中心
spring:
  profiles: eureka
  cloud:
    config:
      server:
        git:
          # See MultipleJGitEnvironmentRepository
          uri: file://Users/lzy/SourceCode/me/demo-cloud-config-repo
          search-paths: ./**
eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:28761/eureka/
    enabled: true

---
# 使用加解密,密钥必需配置在bootstrap.yml里
spring:
  profiles: encrypt
  cloud:
    config:
      server:
        git:
          # See MultipleJGitEnvironmentRepository
          uri: file://Users/lzy/SourceCode/me/demo-cloud-config-repo
          search-paths: ./**

---
# 使用文件系统,只能使用单层目录,无法使用多层目录
spring:
  profiles: native
  cloud:
    config:
      server:
        native:
          search-locations: file:/Users/lzy/SourceCode/me/demo-cloud-config-repo/

---
# 多仓库
spring:
  profiles: multiple-repo
  cloud:
    config:
      server:
        git:
          uri: file://Users/lzy/SourceCode/me/demo-cloud-config-repo
          repos:
            second-repo:
              # 客户端application符合second-*的,并且profile是test则使用demo-cloud-config-repo2,其它的使用demo-cloud-config-repo
              pattern:
                - second-*/test
              uri: file://Users/lzy/SourceCode/me/demo-cloud-config-repo2